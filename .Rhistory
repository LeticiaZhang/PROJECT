kurtosis(my_dataset$RELIG_ENGAGEMENT_log)
skewness(my_dataset$RELIG_ENGAGEMENT_log)
kurtosis(my_dataset$RELIG_ENGAGEMENT)
View(lab4data)
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY)) + geom_density(adjust = 2)  + theme_classic()
my_dataset$LONELY_log = log(my_dataset$LONELY)
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 2)  + theme_classic()
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY)) + geom_density(adjust = 5)  + theme_classic()
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY)) + geom_density(adjust = 0)  + theme_classic()
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY)) + geom_density(adjust = 8)  + theme_classic()
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY)) + geom_density(adjust = -2)  + theme_classic()
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY)) + geom_density(adjust = 2)  + theme_classic()
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY)) + geom_density()  + theme_classic()
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density()  + theme_classic()
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density()  + theme_classic()
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density()  + theme_classic()
# Bootstrap the mean for a g
ggplot(my_dataset, aes(x = LONELY)) + geom_density()  + theme_classic()
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density()  + theme_classic()
# Bootstrap the mean for a grou
# Check the independent variable
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density()  + theme_classic()
# Check the independent variable
ggplot(my_dataset, aes(x = RELIG_ENGAGEMENT)) + geom_density()  + theme_classic()
# Check the dependent variable
# Check skewness and kurtosis
skewness(my_dataset$LONELY)
kurtosis(my_dataset$LONELY)
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY)) + geom_density()  + theme_classic()
# Bootstrap the mean for a group to see the sampling distribution
boot_mean <- function(data, indices) {
d <- data[indices, ]  # Resample data with replacement
return(mean(d$LONELY))  # Calculate mean of the 'LONELY' variable
}
my_group1 <- my_dataset[my_dataset$RACEREC == "(01) Non-Hispanic White", ]
boot_results1 <- boot(data = my_group1, statistic = boot_mean, R = 1000)
# Plot bootstrapped sampling distribution
hist(boot_results1$t, main = "Bootstrapped Sampling Distribution of Mean", xlab = "Mean Loneliness")
my_group2 <- my_dataset[my_dataset$RACEREC == "(02) Non-Hispanic Black", ]
boot_results2 <- boot(data = my_group2, statistic = boot_mean, R = 1000)
hist(boot_results2$t, main = "Bootstrapped Sampling Distribution of Mean", xlab = "Mean Loneliness")
my_group3 <- my_dataset[my_dataset$RACEREC == "(03) Non-Hispanic American Indian/Alaska Native
", ]
boot_results3 <- boot(data = my_group2, statistic = boot_mean, R = 1000)
hist(boot_results3$t, main = "Bootstrapped Sampling Distribution of Mean", xlab = "Mean Loneliness")
my_group4 <- my_dataset[my_dataset$RACEREC == "(04) Hispanic", ]
boot_results4 <- boot(data = my_group4, statistic = boot_mean, R = 1000)
hist(boot_results4$t, main = "Bootstrapped Sampling Distribution of Mean", xlab = "Mean Loneliness")
my_group5 <- my_dataset[my_dataset$RACEREC == "(05) Non-Hispanic Asian or Pacific Islander", ]
boot_results5 <- boot(data = my_group5, statistic = boot_mean, R = 1000)
hist(boot_results5$t, main = "Bootstrapped Sampling Distribution of Mean", xlab = "Mean Loneliness")
# Check the independent variable
ggplot(my_dataset, aes(x = RELIG_ENGAGEMENT)) + geom_density()  + theme_classic()
skewness(my_dataset$RELIG_ENGAGEMENT)
kurtosis(my_dataset$RELIG_ENGAGEMENT)
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY)) + geom_density(adjust = 1)  + theme_classic()
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY)) + geom_density(adjust = 1.5)  + theme_classic()
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5)  + theme_classic()
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
# Check the independent variable
ggplot(my_dataset, aes(x = RELIG_ENGAGEMENT)) + geom_density() + facet_wrap(~RACEREC) + theme_classic()
# Check the dependent variable loneliness
# Check skewness and kurtosis
skewness(my_dataset$LONELY)
kurtosis(my_dataset$LONELY)
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
# Check the independent variable religious engagement
ggplot(my_dataset, aes(x = RELIG_ENGAGEMENT)) + geom_density() + facet_wrap(~RACEREC) + theme_classic()
skewness(my_dataset$RELIG_ENGAGEMENT)
kurtosis(my_dataset$RELIG_ENGAGEMENT)
my_dataset$RELIG_ENGAGEMENT_log <- log(my_dataset$RELIG_ENGAGEMENT)
my_dataset$LONELY_log <- log(my_dataset$LONELY)
skewness(my_dataset$LONELY_log)
kurtosis(my_dataset$LONELY_log)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
ggplot(my_dataset, aes(x = RELIG_ENGAGEMENT_log)) + geom_density() + facet_wrap(~RACEREC) + theme_classic()
skewness(my_dataset$RELIG_ENGAGEMENT_log)
kurtosis(my_dataset$RELIG_ENGAGEMENT_log)
my_dataset$RELIG_ENGAGEMENT_log <- log(my_dataset$RELIG_ENGAGEMENT)
my_dataset$LONELY_log <- log(my_dataset$LONELY)
skewness(my_dataset$LONELY_log)
kurtosis(my_dataset$LONELY_log)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
ggplot(my_dataset, aes(x = RELIG_ENGAGEMENT_log)) + geom_density() + theme_classic()
skewness(my_dataset$RELIG_ENGAGEMENT_log)
kurtosis(my_dataset$RELIG_ENGAGEMENT_log)
# Check the dependent variable loneliness
# Check skewness and kurtosis
skewness(my_dataset$LONELY)
kurtosis(my_dataset$LONELY)
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
# Check the independent variable religious engagement
ggplot(my_dataset, aes(x = RELIG_ENGAGEMENT)) + geom_density() + theme_classic()
skewness(my_dataset$RELIG_ENGAGEMENT)
kurtosis(my_dataset$RELIG_ENGAGEMENT)
my_dataset$RELIG_ENGAGEMENT_log <- sqrt(my_dataset$RELIG_ENGAGEMENT)
my_dataset$LONELY_log <- log(my_dataset$LONELY)
skewness(my_dataset$LONELY_log)
kurtosis(my_dataset$LONELY_log)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
ggplot(my_dataset, aes(x = RELIG_ENGAGEMENT_log)) + geom_density() + theme_classic()
skewness(my_dataset$RELIG_ENGAGEMENT_log)
kurtosis(my_dataset$RELIG_ENGAGEMENT_log)
ggplot(my_dataset, aes(x = RELIG_ENGAGEMENT_log)) + geom_density() + facet_wrap(~RACEREC)+ theme_classic()
ggplot(my_dataset, aes(x = RELIG_ENGAGEMENT_log)) + geom_density()+ theme_classic()
ggplot(my_dataset, aes(x = RELIG_ENGAGEMENT_log)) + geom_density() + facet_wrap(~RACEREC) + theme_classic()
my_dataset$RELIG_ENGAGEMENT_log <- sqrt(my_dataset$RELIG_ENGAGEMENT)
my_dataset$LONELY_log <- log(my_dataset$LONELY)
skewness(my_dataset$LONELY_log)
kurtosis(my_dataset$LONELY_log)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
ggplot(my_dataset, aes(x = RELIG_ENGAGEMENT_log)) + geom_density() + facet_wrap(~RACEREC) + theme_classic()
skewness(my_dataset$RELIG_ENGAGEMENT_log)
kurtosis(my_dataset$RELIG_ENGAGEMENT_log)
# Check the dependent variable loneliness
# Check skewness and kurtosis
skewness(my_dataset$LONELY)
kurtosis(my_dataset$LONELY)
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
# Check the independent variable religious engagement
ggplot(my_dataset, aes(x = RELIG_ENGAGEMENT)) + geom_density() + facet_wrap(~RACEREC) + theme_classic()
skewness(my_dataset$RELIG_ENGAGEMENT)
kurtosis(my_dataset$RELIG_ENGAGEMENT)
my_dataset$RELIG_ENGAGEMENT_log <- log(my_dataset$RELIG_ENGAGEMENT)
my_dataset$LONELY_log <- log(my_dataset$LONELY)
skewness(my_dataset$LONELY_log)
kurtosis(my_dataset$LONELY_log)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
ggplot(my_dataset, aes(x = RELIG_ENGAGEMENT_log)) + geom_density() + facet_wrap(~RACEREC) + theme_classic()
skewness(my_dataset$RELIG_ENGAGEMENT_log)
kurtosis(my_dataset$RELIG_ENGAGEMENT_log)
my_dataset$LONELY_log <- sqrt(my_dataset$LONELY)
my_dataset$RELIG_ENGAGEMENT_log <- log(my_dataset$RELIG_ENGAGEMENT)
my_dataset$LONELY_log <- sqrt(my_dataset$LONELY)
skewness(my_dataset$LONELY_log)
kurtosis(my_dataset$LONELY_log)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
ggplot(my_dataset, aes(x = RELIG_ENGAGEMENT_log)) + geom_density() + facet_wrap(~RACEREC) + theme_classic()
skewness(my_dataset$RELIG_ENGAGEMENT_log)
kurtosis(my_dataset$RELIG_ENGAGEMENT_log)
ks.test(my_dataset$LONELY, "pnorm", mean = mean(my_dataset$LONELY), sd = sd(my_dataset$LONELY))
# Check the dependent variable loneliness
# Check skewness and kurtosis
skewness(my_dataset$LONELY)
# Kolmogorov-Smirnov Test
ks.test(my_dataset$LONELY, "pnorm", mean = mean(my_dataset$LONELY), sd = sd(my_dataset$LONELY))
# Kolmogorov-Smirnov Test
ks.test(my_dataset$LONELY_log, "pnorm", mean = mean(my_dataset$LONELY), sd = sd(my_dataset$LONELY))
shapiro.test(my_dataset$LONELY)
# Kolmogorov-Smirnov Test
my_dataset %>%
group_by(RACEREC) %>%
summarize(W = shapiro.test(LONELY)$statistic, p_value = shapiro.test(LONELY)$p.value)
# Kolmogorov-Smirnov Test
my_dataset %>%
group_by(RACEREC) %>%
summarize(W = shapiro.test(LONELY_log)$statistic, p_value = shapiro.test(LONELY_log)$p.value)
my_dataset$RELIG_ENGAGEMENT_log <- log(my_dataset$RELIG_ENGAGEMENT)
my_dataset$LONELY_log <- sqrt(my_dataset$LONELY)
skewness(my_dataset$LONELY_log)
kurtosis(my_dataset$LONELY_log)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
ggplot(my_dataset, aes(x = RELIG_ENGAGEMENT_log)) + geom_density() + facet_wrap(~RACEREC) + theme_classic()
skewness(my_dataset$RELIG_ENGAGEMENT_log)
kurtosis(my_dataset$RELIG_ENGAGEMENT_log)
my_dataset$RELIG_ENGAGEMENT_log <- log(my_dataset$RELIG_ENGAGEMENT)
my_dataset$LONELY_log <- sqrt(my_dataset$LONELY)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
skewness(my_dataset$RELIG_ENGAGEMENT_log)
kurtosis(my_dataset$RELIG_ENGAGEMENT_log)
# Check the dependent variable loneliness
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
# Check the independent variable religious engagement
# Skewness and kurtosis for religious engagement
skewness(my_dataset$RELIG_ENGAGEMENT)
kurtosis(my_dataset$RELIG_ENGAGEMENT)
my_dataset$RELIG_ENGAGEMENT_log <- sqrt(my_dataset$RELIG_ENGAGEMENT)
my_dataset$LONELY_sqrt <- sqrt(my_dataset$LONELY)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
skewness(my_dataset$LONELY_sqrt)
kurtosis(my_dataset$LONELY_sqrt)
skewness(my_dataset$RELIG_ENGAGEMENT_log)
kurtosis(my_dataset$RELIG_ENGAGEMENT_log)
my_dataset$LONELY_sqrt <- log(my_dataset$LONELY)
skewness(my_dataset$LONELY_sqrt)
skewness(my_dataset$LONELY_sqrt)
kurtosis(my_dataset$LONELY_sqrt)
my_dataset$LONELY_sqrt <- sqrt(my_dataset$LONELY)
my_dataset$LONELY_log <- log(my_dataset$LONELY)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
ggplot(my_dataset, aes(x = LONELY_sqrt)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
skewness(my_dataset$RELIG_ENGAGEMENT_sqrt)
kurtosis(my_dataset$RELIG_ENGAGEMENT_sqrt)
my_dataset$RELIG_ENGAGEMENT_sqrt <- sqrt(my_dataset$RELIG_ENGAGEMENT)
my_dataset$LONELY_log <- log(my_dataset$LONELY)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
skewness(my_dataset$RELIG_ENGAGEMENT_sqrt)
kurtosis(my_dataset$RELIG_ENGAGEMENT_sqrt)
my_dataset$RELIG_ENGAGEMENT_sqrt <- log(my_dataset$RELIG_ENGAGEMENT)
my_dataset$LONELY_log <- log(my_dataset$LONELY)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
skewness(my_dataset$RELIG_ENGAGEMENT_sqrt)
kurtosis(my_dataset$RELIG_ENGAGEMENT_sqrt)
my_dataset$LONELY_log <- log(my_dataset$LONELY)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
library(interactions)
PROCESS(my_dataset, y = "LONELY", x = "RELIG_ENGAGEMENT", mods = c("RACERE"))
library(processR)
install.packages("processR")
library(processR)
library("processR")
library(process)
PROCESS(my_dataset, y = "LONELY", x = "RELIG_ENGAGEMENT", mods = c("RACEREC"))
library(bruceR)
PROCESS(my_dataset, y = "LONELY", x = "RELIG_ENGAGEMENT", mods = c("RACEREC"))
library(haven)
library(dplyr)
library(ggplot2)
library(tidyr)
library(car)
library(moments)
library(boot)
library(bruceR)
load("C:/Users/User/Downloads/ICPSR_38964-V2/ICPSR_38964/DS0001/38964-0001-Data.rda")
dataset <- da38964.0001
rm(da38964.0001)
#Select variables related to my research question
my_dataset <- dataset %>% select(RELIG_ATTEND, RELIG_IMP, RACEREC, LONELY_A, LONELY_B, LONELY_C)
my_dataset <- drop_na(my_dataset)
summary(my_dataset)
#recode and composite the variables
my_dataset$RELIG_ATTEND <- 5 - as.numeric(my_dataset$RELIG_ATTEND)
my_dataset$RELIG_IMP <- 5 - as.numeric(my_dataset$RELIG_IMP)
my_dataset$RELIG_ENGAGEMENT <- (my_dataset$RELIG_ATTEND + my_dataset$RELIG_IMP) / 2
my_dataset$LONELY_A <- as.numeric(my_dataset$LONELY_A)
my_dataset$LONELY_B <- as.numeric(my_dataset$LONELY_B)
my_dataset$LONELY_C <- as.numeric(my_dataset$LONELY_C)
my_dataset$LONELY <- (my_dataset$LONELY_A + my_dataset$LONELY_B + my_dataset$LONELY_C) / 3
# Check the dependent variable loneliness
# Density plot of loneliness
ggplot(my_dataset, aes(x = LONELY)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
# Check the independent variable religious engagement
# Skewness and kurtosis for religious engagement
skewness(my_dataset$RELIG_ENGAGEMENT)
kurtosis(my_dataset$RELIG_ENGAGEMENT)
leveneTest(LONELY ~ RACEREC, data = my_dataset)
my_dataset$LONELY_log <- log(my_dataset$LONELY)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
PROCESS(my_dataset, y = "LONELY_log", x = "RELIG_ENGAGEMENT", mods = c("RACEREC"))
cor.test(data$RELIG_ENGAGEMENT, data$LONELY_log, method = "pearson")
cor.test(my_dataset$RELIG_ENGAGEMENT, my_dataset$LONELY_log, method = "pearson")
PROCESS(my_dataset, y = "LONELY_log", x = "RELIG_ENGAGEMENT", mods = c("RACEREC"))
corr(my_dataset)
Corr(my_dataset)
cor_data <- my_dataset %<% select(RELIG_ENGAGEMENT, LONELY_log, RACEREC)
cor_data <- my_dataset %>% select(RELIG_ENGAGEMENT, LONELY_log, RACEREC)
Corr(my_dataset)
Corr(cor_data)
cor_data <- my_dataset %>% select(RELIG_ENGAGEMENT, LONELY_log, RACEREC)
Corr(cor_data)
PROCESS(my_dataset, y = "LONELY_log", x = "RELIG_ENGAGEMENT", mods = c("RACEREC"))
ggplot(cor_data, aes(x = LONELY_log, y = RELIG_ENGAGEMENT)) + geom_point() + geom_smooth() + theme_bruce() + facet_wrap(~RACEREC)
ggplot(cor_data, aes(x = LONELY_log, y = RELIG_ENGAGEMENT)) + geom_point() + geom_smooth(method = "loess") + theme_bruce() + facet_wrap(~RACEREC)
ggplot(cor_data, aes(x = LONELY_log, y = RELIG_ENGAGEMENT)) + geom_point() + geom_smooth(method = "lm") + theme_bruce() + facet_wrap(~RACEREC)
ggplot(cor_data, aes(x = LONELY_log, y = RELIG_ENGAGEMENT)) + geom_point() + geom_smooth(method = "lm") + theme_bruce()
ggplot(cor_data, aes(x = LONELY_log, y = RELIG_ENGAGEMENT)) + geom_point() + geom_smooth() + theme_bruce()
ggplot(cor_data, aes(x = LONELY_log, y = RELIG_ENGAGEMENT)) + geom_point() + geom_smooth() + theme_bruce() + facet_wrap(~RACEREC)
ggplot(cor_data, aes(x = LONELY_log, y = RELIG_ENGAGEMENT)) + geom_point() + geom_smooth() + theme_bruce()
ggplot(cor_data, aes(x = LONELY_log, y = RELIG_ENGAGEMENT)) + geom_point() + geom_smooth(method = "lm") + theme_bruce() + facet_wrap(~RACEREC)
library(haven)
library(dplyr)
library(ggplot2)
library(tidyr)
library(car)
library(moments)
library(boot)
library(bruceR)
library(interactions)
library(ggrepel)
load("C:/Users/zhang/OneDrive/2024-25/PSY329/ICPSR_38964-V2/ICPSR_38964/DS0001/38964-0001-Data.rda")
dataset <- da38964.0001
rm(da38964.0001)
#Select variables related to my research question
my_dataset <- dataset %>% select(RELIG_ATTEND, RELIG_IMP, RACEREC, LONELY_A, LONELY_B, LONELY_C)
my_dataset <- drop_na(my_dataset)
summary(my_dataset)
#recode and composite the variables
my_dataset$RELIG_ATTEND <- 6 - as.numeric(my_dataset$RELIG_ATTEND)
my_dataset$RELIG_IMP <- 5 - as.numeric(my_dataset$RELIG_IMP)
my_dataset$RELIG_ENGAGEMENT <- (my_dataset$RELIG_ATTEND + my_dataset$RELIG_IMP) / 2
my_dataset$RACEREC <- gsub("Non-Hispanic ", "", my_dataset$RACEREC)
my_dataset$LONELY_A <- as.numeric(my_dataset$LONELY_A)
my_dataset$LONELY_B <- as.numeric(my_dataset$LONELY_B)
my_dataset$LONELY_C <- as.numeric(my_dataset$LONELY_C)
my_dataset$LONELY <- (my_dataset$LONELY_A + my_dataset$LONELY_B + my_dataset$LONELY_C) / 3
race_summary <- my_dataset %>%
group_by(RACEREC) %>%
summarize(count = n()) %>%
mutate(percentage = count / sum(count) * 100)
ggplot(race_summary, aes(x = "", y = percentage, fill = RACEREC)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
geom_label_repel(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5),
box.padding = 0.5,
show.legend = FALSE) +
labs(title = "Race Composition of Participants", fill = "Race/Ethnicity") +
theme_minimal(base_size = 14) +
theme(axis.text = element_blank(), axis.title = element_blank(), panel.grid = element_blank()) +
theme(plot.background = element_rect(fill = "#EFD1C6", color = NA)) +
scale_fill_brewer(palette = "Set3")
ggplot(cor_data, aes(x = LONELY_log, y = RELIG_ENGAGEMENT)) + geom_point(alpha = .3) + geom_smooth(method = "lm", se = TRUE, linetype = "solid", color = "#e7553d") +  theme_minimal(base_size = 14)
library(haven)
library(dplyr)
library(ggplot2)
library(tidyr)
library(car)
library(moments)
library(boot)
library(bruceR)
library(interactions)
library(ggrepel)
load("C:/Users/zhang/OneDrive/2024-25/PSY329/ICPSR_38964-V2/ICPSR_38964/DS0001/38964-0001-Data.rda")
dataset <- da38964.0001
rm(da38964.0001)
#Select variables related to my research question
my_dataset <- dataset %>% select(RELIG_ATTEND, RELIG_IMP, RACEREC, LONELY_A, LONELY_B, LONELY_C)
my_dataset <- drop_na(my_dataset)
summary(my_dataset)
#recode and composite the variables
my_dataset$RELIG_ATTEND <- 6 - as.numeric(my_dataset$RELIG_ATTEND)
my_dataset$RELIG_IMP <- 5 - as.numeric(my_dataset$RELIG_IMP)
my_dataset$RELIG_ENGAGEMENT <- (my_dataset$RELIG_ATTEND + my_dataset$RELIG_IMP) / 2
my_dataset$RACEREC <- gsub("Non-Hispanic ", "", my_dataset$RACEREC)
my_dataset$LONELY_A <- as.numeric(my_dataset$LONELY_A)
my_dataset$LONELY_B <- as.numeric(my_dataset$LONELY_B)
my_dataset$LONELY_C <- as.numeric(my_dataset$LONELY_C)
my_dataset$LONELY <- (my_dataset$LONELY_A + my_dataset$LONELY_B + my_dataset$LONELY_C) / 3
race_summary <- my_dataset %>%
group_by(RACEREC) %>%
summarize(count = n()) %>%
mutate(percentage = count / sum(count) * 100)
ggplot(race_summary, aes(x = "", y = percentage, fill = RACEREC)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
geom_label_repel(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5),
box.padding = 0.5,
show.legend = FALSE) +
labs(title = "Race Composition of Participants", fill = "Race/Ethnicity") +
theme_minimal(base_size = 14) +
theme(axis.text = element_blank(), axis.title = element_blank(), panel.grid = element_blank()) +
scale_fill_brewer(palette = "Set3")
my_dataset$LONELY_log <- log(my_dataset$LONELY)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
cor_data <- my_dataset %>% select(RELIG_ENGAGEMENT, LONELY_log, RACEREC)
Corr(cor_data)
PROCESS(my_dataset, y = "LONELY_log", x = "RELIG_ENGAGEMENT", mods = c("RACEREC"))
ggplot(cor_data, aes(x = LONELY_log, y = RELIG_ENGAGEMENT)) + geom_point(alpha = .3) + geom_smooth(method = "lm", se = TRUE, linetype = "solid", color = "#e7553d") +  theme_minimal(base_size = 14)
ggplot(data = cor_data, aes(x = LONELY_log, y = RELIG_ENGAGEMENT)) +
geom_point(alpha = .3) +
geom_smooth(method = "lm", se = TRUE, linetype = "solid", color = "#e7553d") +
facet_wrap(~RACEREC) +
labs(title = "Correlation between Religious Engagement and Loneliness",
subtitle = "Faceted by Race/Ethnicity",
x = "Log-transformed Loneliness",
y = "Religious Engagement") +
theme_minimal(base_size = 14)
#Select variables related to my research question
my_dataset <- dataset %>% select(RELIG_ATTEND, RELIG_IMP, RACEREC, LONELY_A, LONELY_B, LONELY_C)
my_dataset <- drop_na(my_dataset)
summary(my_dataset)
#recode and composite the variables
my_dataset$RELIG_ATTEND <- 6 - as.numeric(my_dataset$RELIG_ATTEND)
my_dataset$RELIG_IMP <- 5 - as.numeric(my_dataset$RELIG_IMP)
my_dataset$RELIG_ENGAGEMENT <- (my_dataset$RELIG_ATTEND + my_dataset$RELIG_IMP) / 2
my_dataset$RACEREC <- gsub("Non-Hispanic ", "", my_dataset$RACEREC)
my_dataset$LONELY_A <- as.numeric(my_dataset$LONELY_A)
my_dataset$LONELY_B <- as.numeric(my_dataset$LONELY_B)
my_dataset$LONELY_C <- as.numeric(my_dataset$LONELY_C)
my_dataset$LONELY <- (my_dataset$LONELY_A + my_dataset$LONELY_B + my_dataset$LONELY_C) / 3
race_summary <- my_dataset %>%
group_by(RACEREC) %>%
summarize(count = n()) %>%
mutate(percentage = count / sum(count) * 100)
ggplot(race_summary, aes(x = "", y = percentage, fill = RACEREC)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
geom_label_repel(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5),
box.padding = 0.5,
show.legend = FALSE) +
labs(title = "Race Composition of Participants", fill = "Race/Ethnicity") +
theme_minimal(base_size = 14) +
theme(axis.text = element_blank(), axis.title = element_blank(), panel.grid = element_blank()) +
scale_fill_brewer(palette = "Set3")
my_dataset$LONELY_log <- log(my_dataset$LONELY)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
cor_data <- my_dataset %>% select(RELIG_ENGAGEMENT, LONELY_log, RACEREC)
Corr(cor_data)
PROCESS(my_dataset, y = "LONELY_log", x = "RELIG_ENGAGEMENT", mods = c("RACEREC"))
summary(my_dataset)
library(haven)
library(dplyr)
library(ggplot2)
library(tidyr)
library(car)
library(moments)
library(boot)
library(bruceR)
library(interactions)
library(ggrepel)
load("C:/Users/zhang/OneDrive/2024-25/PSY329/ICPSR_38964-V2/ICPSR_38964/DS0001/38964-0001-Data.rda")
dataset <- da38964.0001
rm(da38964.0001)
#Select variables related to my research question
my_dataset <- dataset %>% select(RELIG_ATTEND, RELIG_IMP, RACEREC, LONELY_A, LONELY_B, LONELY_C)
my_dataset <- drop_na(my_dataset)
summary(my_dataset)
my_dataset$RACEREC <- gsub("Non-Hispanic ", "", my_dataset$RACEREC)
summary(my_dataset)
library(haven)
library(dplyr)
library(ggplot2)
library(tidyr)
library(car)
library(moments)
library(boot)
library(bruceR)
library(interactions)
library(ggrepel)
load("C:/Users/zhang/OneDrive/2024-25/PSY329/ICPSR_38964-V2/ICPSR_38964/DS0001/38964-0001-Data.rda")
dataset <- da38964.0001
rm(da38964.0001)
#Select variables related to my research question
my_dataset <- dataset %>% select(RELIG_ATTEND, RELIG_IMP, RACEREC, LONELY_A, LONELY_B, LONELY_C)
my_dataset <- drop_na(my_dataset)
summary(my_dataset)
levels(my_dataset$RACEREC) <- gsub("Non-Hispanic ", "", levels(my_dataset$RACEREC))
summary(my_dataset)
#Select variables related to my research question
my_dataset <- dataset %>% select(RELIG_ATTEND, RELIG_IMP, RACEREC, LONELY_A, LONELY_B, LONELY_C)
my_dataset <- drop_na(my_dataset)
summary(my_dataset)
#recode and composite the variables
my_dataset$RELIG_ATTEND <- 6 - as.numeric(my_dataset$RELIG_ATTEND)
my_dataset$RELIG_IMP <- 5 - as.numeric(my_dataset$RELIG_IMP)
my_dataset$RELIG_ENGAGEMENT <- (my_dataset$RELIG_ATTEND + my_dataset$RELIG_IMP) / 2
levels(my_dataset$RACEREC) <- gsub("Non-Hispanic ", "", levels(my_dataset$RACEREC))
my_dataset$LONELY_A <- as.numeric(my_dataset$LONELY_A)
my_dataset$LONELY_B <- as.numeric(my_dataset$LONELY_B)
my_dataset$LONELY_C <- as.numeric(my_dataset$LONELY_C)
my_dataset$LONELY <- (my_dataset$LONELY_A + my_dataset$LONELY_B + my_dataset$LONELY_C) / 3
race_summary <- my_dataset %>%
group_by(RACEREC) %>%
summarize(count = n()) %>%
mutate(percentage = count / sum(count) * 100)
ggplot(race_summary, aes(x = "", y = percentage, fill = RACEREC)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y", start = 0) +
geom_label_repel(aes(label = paste0(round(percentage, 1), "%")),
position = position_stack(vjust = 0.5),
box.padding = 0.5,
show.legend = FALSE) +
labs(title = "Race Composition of Participants", fill = "Race/Ethnicity") +
theme_minimal(base_size = 14) +
theme(axis.text = element_blank(), axis.title = element_blank(), panel.grid = element_blank()) +
scale_fill_brewer(palette = "Set3")
my_dataset$LONELY_log <- log(my_dataset$LONELY)
ggplot(my_dataset, aes(x = LONELY_log)) + geom_density(adjust = 1.5) + facet_wrap(~RACEREC) + theme_classic()
cor_data <- my_dataset %>% select(RELIG_ENGAGEMENT, LONELY_log, RACEREC)
Corr(cor_data)
PROCESS(my_dataset, y = "LONELY_log", x = "RELIG_ENGAGEMENT", mods = c("RACEREC"))
my_dataset$EDUC <- dataset$EDUC
summary(my_dataset$EDUC)
leveneTest(LONELY_log ~ EDUC, data = my_dataset)
my_dataset$LONELY_sqrt <- sqrt(my_dataset$LONELY)
leveneTest(LONELY_sqrt ~ EDUC, data = my_dataset)
skewness(my_dataset$LONELY_sqrt)
kurtosis(my_dataset$LONELY_sqrt)
cor_data1 <- my_dataset %>% select(RELIG_ENGAGEMENT, LONELY_sqrt, EDUC)
Corr(cor_data1)
PROCESS(my_dataset, y = "LONELY_sqrt", x = "RELIG_ENGAGEMENT", mods = c("EDUC"))
ggplot(data = my_dataset, aes(x = RELIG_ENGAGEMENT, y = LONELY_sqrt, color = EDUC)) +
geom_smooth(method = "lm", se = TRUE) +
facet_wrap(~ EDUC, ncol = 3, scales = "fixed") +
labs(title = "Effect of Religious Engagement on Loneliness by Education",
x = "Religious Engagement",
y = "Sqrt-transformed Loneliness") +
theme_minimal(base_size = 14) + theme(strip.text = element_text(size = 10)) +
theme(legend.position = "none")
